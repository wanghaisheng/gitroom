services:
  # PostgreSQL Database Service
  - type: pserv
    name: postiz-postgres
    plan: starter
    envVars:
      - key: POSTGRES_PASSWORD
        value: postiz-local-pwd
      - key: POSTGRES_USER
        value: postiz-local
      - key: POSTGRES_DB
        value: postiz-db-local
    disk:
      name: postgres-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 10
    startCommand: ""  # No command required for managed PostgreSQL service

  # Redis Service
  - type: pserv
    name: postiz-redis
    plan: starter
    disk:
      name: redis-data
      mountPath: /data
      sizeGB: 5
    startCommand: ""  # No command required for managed Redis service

  # PgAdmin Web Interface
  - type: web
    name: postiz-pg-admin
    plan: starter
    envVars:
      - key: PGADMIN_DEFAULT_EMAIL
        value: admin@admin.com
      - key: PGADMIN_DEFAULT_PASSWORD
        value: admin
    healthCheckPath: /
    startCommand: "python3 /usr/local/bin/pgadmin4"  # Assuming it's a Python-based service

  # RedisInsight Web Interface
  - type: web
    name: postiz-redisinsight
    plan: starter
    envVars:
      - key: REDIS_HOST
        fromService:
          name: postiz-redis
          type: pserv
          property: host
      - key: REDIS_PORT
        fromService:
          name: postiz-redis
          type: pserv
          property: port
    healthCheckPath: /
    startCommand: "redisinsight"  # RedisInsight has a command to start the service
